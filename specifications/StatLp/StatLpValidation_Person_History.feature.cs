// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.0.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Vodamep.StatLp.Specs.Specifications.StatLp
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("StatLp - Validierung der gemeldeten Personen einer Datenmeldung")]
    public partial class StatLp_ValidierungDerGemeldetenPersonenEinerDatenmeldungFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "StatLpValidation_Person_History.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("de-DE"), "StatLp - Validierung der gemeldeten Personen einer Datenmeldung", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Performance bei großem Datenvolumen")]
        public virtual void PerformanceBeiGroBemDatenvolumen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Performance bei großem Datenvolumen", ((string[])(null)));
#line 5
this.ScenarioSetup(scenarioInfo);
#line 6
    testRunner.Given("Im Meldungsbereich für eine Einrichtung befinden sich monatliche Meldungen vom 01" +
                    ".01.2017 bis 31.12.2020", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Angenommen ");
#line 7
    testRunner.Given("Im Meldungsbereich für eine Einrichtung befinden sich Meldungen von 100 Klienten", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Angenommen ");
#line 8
    testRunner.Given("Im Meldungsbereich für eine Einrichtung wird jeder Klient 5 x aufgenommen und ent" +
                    "lassen", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Angenommen ");
#line 9
    testRunner.Given("Im Meldungsbereich für eine Einrichtung wird jeder Klient 5 x geändert", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Angenommen ");
#line 10
    testRunner.Then("dauert die Validierung aller Meldungen nicht länger als 5 Sekunden", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Falsches Gültigkeitsdatum einer Aufnahme")]
        public virtual void FalschesGultigkeitsdatumEinerAufnahme()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Falsches Gültigkeitsdatum einer Aufnahme", ((string[])(null)));
#line 137
this.ScenarioSetup(scenarioInfo);
#line 138
    testRunner.Given("Gesendete Meldung 1 gilt vom 01.12.2020 bis 31.12.2020", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Angenommen ");
#line 139
    testRunner.Given("Gesendete Meldung 1 von Person 1 enthält das Attribut \'Aufnahmeart\' mit dem Wert " +
                    "\'Daueraufnahme\' mit Datum \'01.12.2020\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Angenommen ");
#line 140
    testRunner.Given("Gesendete Meldung 1 von Person 1 enthält das Attribut \'Pflegestufe\' mit dem Wert " +
                    "\'Pflegestufe 1\' mit Datum \'01.12.2020\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Angenommen ");
#line 141
    testRunner.Given("Gesendete Meldung 1 von Person 1 enthält das Attribut \'Pflegestufe Arge\' mit dem " +
                    "Wert \'Pflegestufe 1\' mit Datum \'01.12.2020\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Angenommen ");
#line 142
    testRunner.Given("Gesendete Meldung 1 enthält eine Aufnahme von Person 1 vom 01.12.1999", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Angenommen ");
#line 143
    testRunner.Given("Gesendete Meldung 1 enthält eine Aufenthalt von Person 1 vom 01.12.2020 bis 31.12" +
                    ".2020", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Angenommen ");
#line 144
    testRunner.Then("enthält das Validierungsergebnis den Fehler \'Das Gültigkeitsdatum der Aufnahme vo" +
                    "n Klient xx muss im Meldungszeitraum liegen\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Falsches Gültigkeitsdatum einer Entlassung")]
        public virtual void FalschesGultigkeitsdatumEinerEntlassung()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Falsches Gültigkeitsdatum einer Entlassung", ((string[])(null)));
#line 149
this.ScenarioSetup(scenarioInfo);
#line 150
    testRunner.Given("Gesendete Meldung 1 gilt vom 01.12.2020 bis 31.12.2020", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Angenommen ");
#line 151
    testRunner.Given("Gesendete Meldung 1 von Person 1 enthält das Attribut \'Aufnahmeart\' mit dem Wert " +
                    "\'Daueraufnahme\' mit Datum \'01.12.2020\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Angenommen ");
#line 152
    testRunner.Given("Gesendete Meldung 1 von Person 1 enthält das Attribut \'Pflegestufe\' mit dem Wert " +
                    "\'Pflegestufe 1\' mit Datum \'01.12.2020\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Angenommen ");
#line 153
    testRunner.Given("Gesendete Meldung 1 von Person 1 enthält das Attribut \'Pflegestufe Arge\' mit dem " +
                    "Wert \'Pflegestufe 1\' mit Datum \'01.12.2020\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Angenommen ");
#line 154
    testRunner.Given("Gesendete Meldung 1 von Person 1 enthält das Attribut \'Finanzierung\' mit dem Wert" +
                    " \'Selbst/Angehörige 100 %\' mit Datum \'01.12.2020\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Angenommen ");
#line 155
    testRunner.Given("Gesendete Meldung 1 enthält eine Aufnahme von Person 1 vom 01.12.2020", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Angenommen ");
#line 156
    testRunner.Given("Gesendete Meldung 1 enthält eine Aufenthalt von Person 1 vom 01.12.2020 bis 31.12" +
                    ".2020", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Angenommen ");
#line 157
    testRunner.Given("Gesendete Meldung 1 enthält eine Entlassung von Person 1 am 31.12.1999", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Angenommen ");
#line 158
    testRunner.Then("enthält das Validierungsergebnis den Fehler \'Das Gültigkeitsdatum der Entlassung " +
                    "von Klient xx muss im Meldungszeitraum liegen\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dann ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

